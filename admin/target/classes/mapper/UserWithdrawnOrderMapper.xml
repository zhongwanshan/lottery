<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lottery.dao.UserWithdrawnOrderMapper">
  <resultMap id="BaseResultMap" type="com.lottery.entity.UserWithdrawnOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="withdrawn_order_code" jdbcType="VARCHAR" property="withdrawnOrderCode" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="auth_state" jdbcType="TINYINT" property="authState" />
    <result column="auth_time" jdbcType="TIMESTAMP" property="authTime" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="approve_user_code" jdbcType="VARCHAR" property="approveUserCode" />
    <result column="result_status" jdbcType="TINYINT" property="resultStatus" />
    <result column="pay_order_id" jdbcType="VARCHAR" property="payOrderId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="refuse_reason" jdbcType="VARCHAR" property="refuseReason" />
    <result column="bank_card_id" jdbcType="BIGINT" property="bankCardId" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="card_no" jdbcType="VARCHAR" property="cardNo" />
    <result column="card_end_no" jdbcType="VARCHAR" property="cardEndNo" />
    <result column="bank_account_name" jdbcType="VARCHAR" property="bankAccountName" />
    <result column="user_type" jdbcType="TINYINT" property="userType" />
    <result column="app_type" jdbcType="INTEGER" property="appType" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="sub_bank_name" jdbcType="VARCHAR" property="subBankName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, withdrawn_order_code, user_id, amount, apply_time, auth_state, auth_time, finish_time, 
    approve_user_code, result_status, pay_order_id, remark, refuse_reason, bank_card_id, 
    bank_name, card_no, card_end_no, bank_account_name, user_type, app_type, update_time, 
    sub_bank_name
  </sql>
  <select id="selectByExample" parameterType="com.lottery.entity.UserWithdrawnOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user_withdrawn_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_withdrawn_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  
   <!--  分页查询提现信息 -->
    <select id="queryUserWithdrawnOrderByCondition" parameterType="com.lottery.entity.UserWithdrawnOrder" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_withdrawn_order
    where 1=1
    <if test="bankCardId != null and bankCardId !=0">
      and bank_card_id= #{bankCardId}
    </if>
     <if test="cardNo != null">
     and card_no like CONCAT('%',#{cardNo},'%')
    </if>
     <if test="authState != null and authState !=10">
     and auth_state= #{authState}
    </if>
    order by id desc limit #{pageNum},10
  </select>
      
     <!--根据条件查询总记录数 -->
    <select id="queryUserWithdrawnOrderCountByCondition" parameterType="com.lottery.entity.UserWithdrawnOrder" resultType="java.lang.Integer">
    select 
    count(*)
    from user_withdrawn_order
     where 1=1
    <if test="bankCardId != null and bankCardId !=0">
      and bank_card_id= #{bankCardId}
    </if>
     <if test="cardNo != null">
     and card_no like CONCAT('%',#{cardNo},'%')
    </if>
     <if test="authState != null and authState !=10">
     and auth_state= #{authState}
    </if>
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_withdrawn_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lottery.entity.UserWithdrawnOrderExample">
    delete from user_withdrawn_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lottery.entity.UserWithdrawnOrder">
    insert into user_withdrawn_order (id, withdrawn_order_code, user_id, 
      amount, apply_time, auth_state, 
      auth_time, finish_time, approve_user_code, 
      result_status, pay_order_id, remark, 
      refuse_reason, bank_card_id, bank_name, 
      card_no, card_end_no, bank_account_name, 
      user_type, app_type, update_time, 
      sub_bank_name)
    values (#{id,jdbcType=BIGINT}, #{withdrawnOrderCode,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{amount,jdbcType=INTEGER}, #{applyTime,jdbcType=TIMESTAMP}, #{authState,jdbcType=TINYINT}, 
      #{authTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}, #{approveUserCode,jdbcType=VARCHAR}, 
      #{resultStatus,jdbcType=TINYINT}, #{payOrderId,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{refuseReason,jdbcType=VARCHAR}, #{bankCardId,jdbcType=BIGINT}, #{bankName,jdbcType=VARCHAR}, 
      #{cardNo,jdbcType=VARCHAR}, #{cardEndNo,jdbcType=VARCHAR}, #{bankAccountName,jdbcType=VARCHAR}, 
      #{userType,jdbcType=TINYINT}, #{appType,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{subBankName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lottery.entity.UserWithdrawnOrder">
    insert into user_withdrawn_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="withdrawnOrderCode != null">
        withdrawn_order_code,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="authState != null">
        auth_state,
      </if>
      <if test="authTime != null">
        auth_time,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="approveUserCode != null">
        approve_user_code,
      </if>
      <if test="resultStatus != null">
        result_status,
      </if>
      <if test="payOrderId != null">
        pay_order_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="refuseReason != null">
        refuse_reason,
      </if>
      <if test="bankCardId != null">
        bank_card_id,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="cardNo != null">
        card_no,
      </if>
      <if test="cardEndNo != null">
        card_end_no,
      </if>
      <if test="bankAccountName != null">
        bank_account_name,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="appType != null">
        app_type,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="subBankName != null">
        sub_bank_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="withdrawnOrderCode != null">
        #{withdrawnOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authState != null">
        #{authState,jdbcType=TINYINT},
      </if>
      <if test="authTime != null">
        #{authTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approveUserCode != null">
        #{approveUserCode,jdbcType=VARCHAR},
      </if>
      <if test="resultStatus != null">
        #{resultStatus,jdbcType=TINYINT},
      </if>
      <if test="payOrderId != null">
        #{payOrderId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="refuseReason != null">
        #{refuseReason,jdbcType=VARCHAR},
      </if>
      <if test="bankCardId != null">
        #{bankCardId,jdbcType=BIGINT},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="cardEndNo != null">
        #{cardEndNo,jdbcType=VARCHAR},
      </if>
      <if test="bankAccountName != null">
        #{bankAccountName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=TINYINT},
      </if>
      <if test="appType != null">
        #{appType,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subBankName != null">
        #{subBankName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lottery.entity.UserWithdrawnOrderExample" resultType="java.lang.Long">
    select count(*) from user_withdrawn_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_withdrawn_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.withdrawnOrderCode != null">
        withdrawn_order_code = #{record.withdrawnOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.applyTime != null">
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.authState != null">
        auth_state = #{record.authState,jdbcType=TINYINT},
      </if>
      <if test="record.authTime != null">
        auth_time = #{record.authTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.approveUserCode != null">
        approve_user_code = #{record.approveUserCode,jdbcType=VARCHAR},
      </if>
      <if test="record.resultStatus != null">
        result_status = #{record.resultStatus,jdbcType=TINYINT},
      </if>
      <if test="record.payOrderId != null">
        pay_order_id = #{record.payOrderId,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.refuseReason != null">
        refuse_reason = #{record.refuseReason,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCardId != null">
        bank_card_id = #{record.bankCardId,jdbcType=BIGINT},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNo != null">
        card_no = #{record.cardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.cardEndNo != null">
        card_end_no = #{record.cardEndNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccountName != null">
        bank_account_name = #{record.bankAccountName,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=TINYINT},
      </if>
      <if test="record.appType != null">
        app_type = #{record.appType,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.subBankName != null">
        sub_bank_name = #{record.subBankName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_withdrawn_order
    set id = #{record.id,jdbcType=BIGINT},
      withdrawn_order_code = #{record.withdrawnOrderCode,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=INTEGER},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      auth_state = #{record.authState,jdbcType=TINYINT},
      auth_time = #{record.authTime,jdbcType=TIMESTAMP},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      approve_user_code = #{record.approveUserCode,jdbcType=VARCHAR},
      result_status = #{record.resultStatus,jdbcType=TINYINT},
      pay_order_id = #{record.payOrderId,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      refuse_reason = #{record.refuseReason,jdbcType=VARCHAR},
      bank_card_id = #{record.bankCardId,jdbcType=BIGINT},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      card_no = #{record.cardNo,jdbcType=VARCHAR},
      card_end_no = #{record.cardEndNo,jdbcType=VARCHAR},
      bank_account_name = #{record.bankAccountName,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=TINYINT},
      app_type = #{record.appType,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      sub_bank_name = #{record.subBankName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lottery.entity.UserWithdrawnOrder">
    update user_withdrawn_order
    <set>
      <if test="withdrawnOrderCode != null">
        withdrawn_order_code = #{withdrawnOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="applyTime != null">
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authState != null">
        auth_state = #{authState,jdbcType=TINYINT},
      </if>
      <if test="authTime != null">
        auth_time = #{authTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approveUserCode != null">
        approve_user_code = #{approveUserCode,jdbcType=VARCHAR},
      </if>
      <if test="resultStatus != null">
        result_status = #{resultStatus,jdbcType=TINYINT},
      </if>
      <if test="payOrderId != null">
        pay_order_id = #{payOrderId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="refuseReason != null">
        refuse_reason = #{refuseReason,jdbcType=VARCHAR},
      </if>
      <if test="bankCardId != null">
        bank_card_id = #{bankCardId,jdbcType=BIGINT},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="cardEndNo != null">
        card_end_no = #{cardEndNo,jdbcType=VARCHAR},
      </if>
      <if test="bankAccountName != null">
        bank_account_name = #{bankAccountName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=TINYINT},
      </if>
      <if test="appType != null">
        app_type = #{appType,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subBankName != null">
        sub_bank_name = #{subBankName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lottery.entity.UserWithdrawnOrder">
    update user_withdrawn_order
    set withdrawn_order_code = #{withdrawnOrderCode,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      amount = #{amount,jdbcType=INTEGER},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      auth_state = #{authState,jdbcType=TINYINT},
      auth_time = #{authTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      approve_user_code = #{approveUserCode,jdbcType=VARCHAR},
      result_status = #{resultStatus,jdbcType=TINYINT},
      pay_order_id = #{payOrderId,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      refuse_reason = #{refuseReason,jdbcType=VARCHAR},
      bank_card_id = #{bankCardId,jdbcType=BIGINT},
      bank_name = #{bankName,jdbcType=VARCHAR},
      card_no = #{cardNo,jdbcType=VARCHAR},
      card_end_no = #{cardEndNo,jdbcType=VARCHAR},
      bank_account_name = #{bankAccountName,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=TINYINT},
      app_type = #{appType,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      sub_bank_name = #{subBankName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>