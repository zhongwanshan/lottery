<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lottery.dao.LotteryOrderRouteMapper">
	<resultMap id="BaseResultMap" type="com.lottery.entity.LotteryOrderRoute">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="rule_name" jdbcType="VARCHAR" property="ruleName" />
		<result column="lotto_type_id" jdbcType="INTEGER" property="lottoTypeId" />
		<result column="lotto_type_name" jdbcType="VARCHAR" property="lottoTypeName" />
		<result column="min_order_price" jdbcType="INTEGER" property="minOrderPrice" />
		<result column="max_order_price" jdbcType="INTEGER" property="maxOrderPrice" />
		<result column="min_pay_money" jdbcType="INTEGER" property="minPayMoney" />
		<result column="max_pay_money" jdbcType="INTEGER" property="maxPayMoney" />
		<result column="crate_time" jdbcType="TIMESTAMP" property="crateTime" />
		<result column="is_valid" jdbcType="INTEGER" property="isValid" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, rule_name, lotto_type_id, lotto_type_name, min_order_price,
		max_order_price,
		min_pay_money, max_pay_money, crate_time, is_valid
	</sql>
	<select id="selectByExample" parameterType="com.lottery.entity.LotteryOrderRouteExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from lottery_order_route
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from lottery_order_route
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<!-- 根据条件查询10条记录 -->
	<select id="searchLotteryOrderRouteByCondition" parameterType="com.lottery.entity.LotteryOrderRoute"
		resultMap="BaseResultMap">
		SELECT a.id,
		a.rule_name,
		a.lotto_type_name,
		a.min_order_price,
		a.max_order_price,
		a.min_pay_money,
		a.max_pay_money,
		a.is_valid,
		count(b.id) lotto_type_id
		from lottery_order_route a LEFT JOIN lottery_order_route_shop b
		on a.id=b.route_id  where 1=1
		<if test="ruleName != null and ruleName != ''">
			and a.rule_name LIKE CONCAT('%',#{ruleName},'%')
		</if>
		<if test="isValid != null  and isValid !=3">
			and a.is_valid=#{isValid}
		</if>
		GROUP BY a.id,a.rule_name,
		a.lotto_type_id,a.lotto_type_name,a.min_order_price,
		a.max_order_price,a.min_pay_money,a.max_pay_money,
		a.is_valid order by
		a.id desc limit #{pageNum},10
	</select>

	<!-- 根据条件查询总记录 数 -->
	<select id="searchLotteryOrderRouteCountByCondition"
		parameterType="com.lottery.entity.LotteryOrderRoute" resultType="java.lang.Integer">
		select 
		count(*)
		from lottery_order_route
		where 1=1
		<if test="ruleName != null and ruleName != ''">
			and rule_name=#{ruleName}
		</if>
		<if test="isValid != null and isValid !=3">
		
			and is_valid=#{isValid}
		</if>
	</select>











	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from lottery_order_route
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.lottery.entity.LotteryOrderRouteExample">
		delete from lottery_order_route
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.lottery.entity.LotteryOrderRoute">
		insert into lottery_order_route (id, rule_name, lotto_type_id,
		lotto_type_name, min_order_price, max_order_price,
		min_pay_money, max_pay_money, crate_time,
		is_valid)
		values (#{id,jdbcType=INTEGER}, #{ruleName,jdbcType=VARCHAR},
		#{lottoTypeId,jdbcType=INTEGER},
		#{lottoTypeName,jdbcType=VARCHAR}, #{minOrderPrice,jdbcType=INTEGER}, #{maxOrderPrice,jdbcType=INTEGER},
		#{minPayMoney,jdbcType=INTEGER}, #{maxPayMoney,jdbcType=INTEGER},
		#{crateTime,jdbcType=TIMESTAMP},
		#{isValid,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" keyProperty="id" useGeneratedKeys="true" keyColumn="id" parameterType="com.lottery.entity.LotteryOrderRoute">
		insert into lottery_order_route
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="ruleName != null">
				rule_name,
			</if>
			<if test="lottoTypeId != null">
				lotto_type_id,
			</if>
			<if test="lottoTypeName != null">
				lotto_type_name,
			</if>
			<if test="minOrderPrice != null">
				min_order_price,
			</if>
			<if test="maxOrderPrice != null">
				max_order_price,
			</if>
			<if test="minPayMoney != null">
				min_pay_money,
			</if>
			<if test="maxPayMoney != null">
				max_pay_money,
			</if>
			<if test="crateTime != null">
				crate_time,
			</if>
			<if test="isValid != null">
				is_valid,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="ruleName != null">
				#{ruleName,jdbcType=VARCHAR},
			</if>
			<if test="lottoTypeId != null">
				#{lottoTypeId,jdbcType=INTEGER},
			</if>
			<if test="lottoTypeName != null">
				#{lottoTypeName,jdbcType=VARCHAR},
			</if>
			<if test="minOrderPrice != null">
				#{minOrderPrice,jdbcType=INTEGER},
			</if>
			<if test="maxOrderPrice != null">
				#{maxOrderPrice,jdbcType=INTEGER},
			</if>
			<if test="minPayMoney != null">
				#{minPayMoney,jdbcType=INTEGER},
			</if>
			<if test="maxPayMoney != null">
				#{maxPayMoney,jdbcType=INTEGER},
			</if>
			<if test="crateTime != null">
				#{crateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isValid != null">
				#{isValid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.lottery.entity.LotteryOrderRouteExample"
		resultType="java.lang.Long">
		select count(*) from lottery_order_route
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update lottery_order_route
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.ruleName != null">
				rule_name = #{record.ruleName,jdbcType=VARCHAR},
			</if>
			<if test="record.lottoTypeId != null">
				lotto_type_id = #{record.lottoTypeId,jdbcType=INTEGER},
			</if>
			<if test="record.lottoTypeName != null">
				lotto_type_name = #{record.lottoTypeName,jdbcType=VARCHAR},
			</if>
			<if test="record.minOrderPrice != null">
				min_order_price = #{record.minOrderPrice,jdbcType=INTEGER},
			</if>
			<if test="record.maxOrderPrice != null">
				max_order_price = #{record.maxOrderPrice,jdbcType=INTEGER},
			</if>
			<if test="record.minPayMoney != null">
				min_pay_money = #{record.minPayMoney,jdbcType=INTEGER},
			</if>
			<if test="record.maxPayMoney != null">
				max_pay_money = #{record.maxPayMoney,jdbcType=INTEGER},
			</if>
			<if test="record.crateTime != null">
				crate_time = #{record.crateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.isValid != null">
				is_valid = #{record.isValid,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update lottery_order_route
		set id = #{record.id,jdbcType=INTEGER},
		rule_name = #{record.ruleName,jdbcType=VARCHAR},
		lotto_type_id = #{record.lottoTypeId,jdbcType=INTEGER},
		lotto_type_name = #{record.lottoTypeName,jdbcType=VARCHAR},
		min_order_price = #{record.minOrderPrice,jdbcType=INTEGER},
		max_order_price = #{record.maxOrderPrice,jdbcType=INTEGER},
		min_pay_money = #{record.minPayMoney,jdbcType=INTEGER},
		max_pay_money = #{record.maxPayMoney,jdbcType=INTEGER},
		crate_time = #{record.crateTime,jdbcType=TIMESTAMP},
		is_valid = #{record.isValid,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.lottery.entity.LotteryOrderRoute">
		update lottery_order_route
		<set>
			<if test="ruleName != null">
				rule_name = #{ruleName,jdbcType=VARCHAR},
			</if>
			<if test="lottoTypeId != null">
				lotto_type_id = #{lottoTypeId,jdbcType=INTEGER},
			</if>
			<if test="lottoTypeName != null">
				lotto_type_name = #{lottoTypeName,jdbcType=VARCHAR},
			</if>
			<if test="minOrderPrice != null">
				min_order_price = #{minOrderPrice,jdbcType=INTEGER},
			</if>
			<if test="maxOrderPrice != null">
				max_order_price = #{maxOrderPrice,jdbcType=INTEGER},
			</if>
			<if test="minPayMoney != null">
				min_pay_money = #{minPayMoney,jdbcType=INTEGER},
			</if>
			<if test="maxPayMoney != null">
				max_pay_money = #{maxPayMoney,jdbcType=INTEGER},
			</if>
			<if test="crateTime != null">
				crate_time = #{crateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isValid != null">
				is_valid = #{isValid,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.lottery.entity.LotteryOrderRoute">
		update lottery_order_route
		set rule_name = #{ruleName,jdbcType=VARCHAR},
		lotto_type_id = #{lottoTypeId,jdbcType=INTEGER},
		lotto_type_name = #{lottoTypeName,jdbcType=VARCHAR},
		min_order_price = #{minOrderPrice,jdbcType=INTEGER},
		max_order_price = #{maxOrderPrice,jdbcType=INTEGER},
		min_pay_money = #{minPayMoney,jdbcType=INTEGER},
		max_pay_money = #{maxPayMoney,jdbcType=INTEGER},
		crate_time = #{crateTime,jdbcType=TIMESTAMP},
		is_valid = #{isValid,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>